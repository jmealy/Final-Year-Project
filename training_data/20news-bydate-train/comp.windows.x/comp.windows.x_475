Tcpview is the result of several problems we had at UW.  We have several
Network General Sniffers which are heavily used to help debug problems on
several hundred subnets. These are good tools, but they are ) heavy, 
) hard to find when you need one, ) limited in their software expandibility,
) difficult to use to upload data for analysis, ) cannot be remotely
operated, and ) cannot resolve names with DNS, requiring much manual 
manipulation of the name table.  We also sometimes use tcpdump, but we found 
it ) too difficult for most people, ) did not have enough information for
many protocols, ) could not be used interactively, ) could not handle
TCP streams and ) could not read Sniffer files.  However, tcpdump did do
a reasonable job of decoding a large number of protocols, and could be easily
modified.  Tcpview is an attempt to resolve these problems
by adding a Motif interface to tcpdump and expanding its features.

Tcpview has been tested on a DECstation  and Sun  under Ultrix . and
SunOS . respectively.  It should work on the same systems as tcpdump.
It compiles with cc and gcc on the DEC and Sun.  To build tcpview you will
need Motif . or better.

The following files are available for anonymous ftp from 
ftp.cac.washington.edu in /pub/networking

tcpview-..tar.Z	tcpview and tcpdump source code
tcpview-..sun.tar.Z	Sun binaries
tcpview-..dec.tar.Z	DEC Mips Ultrix . binaries

What tcpview adds to tcpdump:
- easier interface
- enhanced protocol decoding
- hex display of frame
- capture based on time, number of frames, or user interrupt
- can show ethernet addresses with manufacturer's name
- ethernet address host table
- can easily follow a stream, highlighting out-of-order frames
- can send TCP data to an external file or filter for additional
	processing.

-------------------------------------------------------------------------------
CHANGES TO TCPDUMP ..

New features:

Now reads and writes Network General Sniffer files.  When used with '-r', the 
file type will be automatically detected.

Can now read in (and use) an SNMP MIB file.

The hex format has been changed.

New time options have been added.

Options were added to allow viewing and processing of the data in TCP packets.

Bugs were fixed in the relative TCP sequence numbers. (-S flag)

New flags:
-R	read Sniffer file.  Not usually needed, except for reading from stdin
-ttt	prints delta times
-tttt	prints times relative to the first frame
-W	write a Sniffer save file (use with -w)
-x	print frame (minus link-level header) in hexdump format.  
	Sample output:

::. jeff.cac.washington.edu. > nic.funet.fi.ftp: S :() win 
              a    c  c c  f     |  E..(....<.|.._p.
           d       b  a        |  ...d....[.J.....
              e                  |  P.@.N.........

-X	print TCP data in hexdump format (used with -Z)
-z	write TCP data to stdout (use with -t to eliminate timestamp)
-Z	write frames and TCP data to stdout


Martin M. Hunt
martinh@cac.washington.edu
Networks & Distributed Computing
University of Washington






--
