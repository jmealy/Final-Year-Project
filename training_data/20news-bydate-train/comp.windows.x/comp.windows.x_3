Archive-name: Intel-Unix-X-faq
Last-modified:  Mar 

Note: This is a major re-organization (and replacement) of my
      "Frequently Asked Questions About X" FAQ list.

This article includes answers to:

I) What options do I have for X software on my Intel-based Unix system?
	. Free options
	. Commercial options
II) What is XFree and where do I get it?
	. What is XFree?
	. What OSs are supported?
	. What video hardware is supported?
	. What about accelerated boards?
	. Why doesn't XFree support -color VGA modes?
	. What other hardware or software requirements are there?
	. Where can I get source for XFree?
	. Where can I get binaries for XFree?
IV) What general things should I know about running XFree?
	. Installation directories
	. Configuration files
	. Determining VGA dot clocks and monitor modes
	. Rebuilding/reconfiguring the server from the link kit
V) What OS-specific things should I know about running XFree?
	. SVR
	. SVR
	. BSD
	. Linux
	. Mach
VI) What things should I know for building XFree from source?
VII) Is there anything special about building clients with XFree?
	. BSD compatibility library
	. ANSICCOPTIONS

This article does NOT include answers to general X questions, since these
are already covered by the X FAQ that is regularly posted by David B. Lewis
<faq%craft@uunet.uu.net>.

If you have anything to add or change on the FAQ just let me know.
(especially if you had a problem that someone else was able to help you with)
Send changes to steve@ecf.toronto.edu, please put 'FAQ' somewhere
in the subject line so that my mail filter will put it in the correct
mail folder.

Please DO NOT ask me questions that are not answered in the FAQ.  I do not
have time to respond to these individually.  Instead, post your question
to the net, and send me the question and answer together when you get it.

Frequently Asked Questions About X on Intel-based Unix (with answers)
=====================================================================

I) What options do I have for X software on my Intel-based Unix system?

. Free options
	The BEST option is XFree, which is an enhanced version of X ..
	Any other version of X will have slower performance, and will
	be more difficult to compile.  Information on how to obtain XFree
	is listed below.

	X is the port of the X server to System V/ that was
	done by Thomas Roell (roell@sgcs.com).
	It supports a wide variety of SVGA boards.
	There are  major free versions: X . is based on XR,
	X . is included in MIT's XR distribution (ie. you
	don't need to patch it into the MIT source any more).
	X . is the current commercial offering from SGCS (see below).

. Commercial options

     ) Metro Link
	 W. McNab Road
	Pompano Beach, FL  
	() -
	Fax: () -
	email: sales@metrolink.com

	Summary: OS:    QNX, SVR, SVR.[], SCO, UnixWare, LynxOS, 
			DESQview/X, Venix, ISC, Solaris, Pyramid, SunOS
		 HW:    EGA, VGA, SVGA, TIGA, TARGA, /A, Mach, 
			S, WD, Fujistu, Matrox, Microfield Graphics, R
		 Other: Motif, OpenLook/XView, XIE Imaging Extension,
			Xv Video Extension, Audio Drivers, Multi Media

     ) SGCS (Snitily Graphics Consulting Services)
	 Brookgrove Lane
	Cupertino, CA  
	() -, () -
	Fax: () -
	email: info@sgcs.com  or ...!mips!zok!info

	Summary: OS: SVR., SVR 
		 HW: /A (ATI Ultra), S (Diamond Stealth), SVGA
		 Other: Motif, Dual-headed server

     ) Consensys Corporation
	 Pat Booker Rd.
	Universal City, TX 
	Phone: ---
	FAX:   ---
	email: info@consensys.com

	Summary: OS: Consensys V., Consensys' version of
		     Unix System V Release .
		 HW: XR server support for VGA, SVGA
		 Other: MoOLIT, Motif, XR Clients

     ) The Santa Cruz Operation, Inc.
	p.o. box 
	Santa Cruz, California 
	()  , () SCO UNIX,
	FAX: ()  
	email: info@sco.com

	Summary: OS: ODT ., ODT ., SCO Unix .v
		 HW: XR server support for SVGA, /A, S, TMSx,
		     WDC, XGA, assorted local bus (see SCO Hardware
		     Compatabilty Guide for actual card vendors).
		 Other: Motif	

     ) Answer Software & Consulting
	p.o. box 
	Columbus, Ohio 
	--XLAB
	email: sales@xcoher.com

	Summary: OS: Coherent ..r or greater
		 HW: works with any VESA compliant video

  NOTE: Other commercial vendors (including OS vendors describing
	bundled software) are welcome to submit summary information
	summary information such as the above.

II) What is XFree and where do I get it?

. What is XFree?

   XFree is an enhanced version of X ., which was distributed with
   XR.  This release consists of many bug fixes, speed improvements, and
   other enhancements.  Here are the highlights of the enhancements:

    ) The SpeedUp package from Glenn Lai is an integral part of XFree,
       selectable at run-time via the Xconfig file.  Some SpeedUps require
       an ET based SVGA, and others require a virtual screen width of
       .  The SpeedUps suitable to the configuration are selected by
       default.  With a high-quality ET board (VRAM), this can yield
       up to % improvement of the xStones benchmark over X ..
    ) The fX packages from Jim Tsillas are included as the default
       operating mode if SpeedUp is not selected.  This mode is now
       equivalent in performance to X .b (XR), and approximately
       % faster than X ..
    ) Support for LOCALCONN, compile-time selectable for server, clients,
       or both.  This support is for both SVR. and SVR.  For SVR..
       with the 'Advanced Compatibility Package', local connections from
       SCO XSight/ODT clients are supported.
    ) Drivers for ATI and Trident TVGAC and TVGA SVGA chipsets.
       Refer to the files README.ati and README.trident for details about
       the ATI and Trident drivers.
    ) Support for compressed bitmap fonts has been added (Thomas Eberhardt's
       code from the contrib directory on export.lcs.mit.edu).
    ) Type Font code from MIT contrib tape has been included, and is
       compile-time selectable.  There are contributed Type fonts in the
       contrib directory on export.lcs.mit.edu.
    ) New configuration method which allows the server's drivers and font
       renderers to be reconfigured from both source and binary
       distributions.
    ) Integrated support for BSD, Mach, and Linux.
    ) A monochrome version of the server which will run on generic VGA
       cards is now included.

   The following key features were added with the release of XFree .
   (they were not in XFree .):

    ) The monochrome server has been enhanced to do bank-switching of
       available SVGA memory to allow virtual screens up to x 
       (see the X() manual page for more information).
    ) Support for the Hercules mono card has been added to the
       monochrome server, and with it the ability to support a "two
       headed" server - one VGA, and one Hercules.  So far this has only
       been tested on SVR (it is also reported to work under Linux).
    ) SVR shared libraries, tested under ISC SVR . and ...
    ) Support for SVR. (There are some special considerations to
       consider, due to new USL bugs; see the README.SVR file for
       more information.)
    ) Support for PS/ mice, and Logitech MouseMan/TrackMan (some 
       versions of these devices were not previously compatible).
    ) A new tutorial on how to develop correct video card and monitor
       timing data, written by Eric Raymond (derived from previous
       documentation and a lot of experimentation).
    ) Greatly improved support for international keyboards, including
       implementation of the Compose key functionality found on many 
       vendor servers (see the Xkeybd() manual page for more 
       information).
    ) The accuracy with which the server detects SVGA pixel clocks has
       been improved, and the timings are now stored at accuracies of
       . MHz.  Users may want to consider removing an existing Clocks
       line from their Xconfig file and re-probing using the new server.
    ) Many enhancements in error handling and parsing of the Xconfig
       configuration file.  Error messages are much more informative
       and intuitive, and more validation is done.  There are many new
       options that can be enabled in the Xconfig file (see the X() 
       manual page for more information on the format of this file).

       Plus a number of other small things.  Refer to the CHANGELOG file
       in the source distribution for full details.

   Also included are a tutorial on monitor timing by Eric Raymond, and the
   current X mode database and a sample xdm configuration by David Wexelblat.

. What OSs are supported?

    XFree supports:
	SVR.: Consensys V.
	SVR.: Microport, Dell, Esix, ISC, AT&T, MST, Consensys, UHC
	SVR: ISC . & ., AT&T .
	Linux, Mach , BSD .

	BSD/ is not supported, but it should work. The most active
	BSD/ person is Greg Lehey <grog@lemis.de>.

	Note that Esix .D and SCO are not supported yet,
	but anyone should feel free to submit patches.
	If you are interested in tackling this, send mail to
	xfree@physics.su.oz.au

. What video hardware is supported?

   At this time, XFree . supports the following SVGA chipsets:

	Tseng ET
	Tseng ET
	Paradise PVGA
	Western Digital WDC, WDC, WDC (these are supersets of
		the PVGA, and use its driver)
	Genoa GVGA
	Trident TVGAC, TVGA
	ATI , 

	All of the above are supported in both  color and monochrome modes,
	with the exception of the ATI chipsets, which are only supported in
	 color mode.

	The monochrome server also supports generic VGA cards, using k of
	video memory in a single bank, and the Hercules card.  On the
	ET, only k of video memory is supported for the monochrome
	server, and the GVGA has not been tested with more than k.

	It appears that some of the SVGA card manufacturers are going to
	non-traditional mechanisms for selecting pixel-clock frequencies.  To
	avoid having to modify the server to accommodate these schemes XFree
	. adds support for using an external program to select the pixel
	clock.  This allows programs to be written as new mechanisms are
	discovered.  Refer to the README.clkprog file for information on how
	these programs work, if you need to write one.  If you do develop such
	a program, the XFree team would be interested in including it with
	future XFree releases.

	If you are purchasing new hardware for the purpose of using XFree,
	it is suggested that you purchase an ET-based board such as the
	Orchid ProDesigner IIs.  Avoid recent Diamond boards; XFree will not
	work with them, because Diamond won't provide programming details.
	In fact, the XFree project is actively not supporting new Diamond
	products, as long as such policies remain in effect.  Contributions
	of code will NOT be accepted (because of the potential liabilities).
	If you would like to see this change, tell Diamond about it.

	Some people have asked if XFree would work with local bus or EISA
	video cards. Theoretically, the means of communication between the
	CPU and the video card is irrelevant to Xfree compatibility. It
	could be ISA, EISA, or local bus.  What should matter is the chipset
	on the video card.  Unfortunately, the developers don't have a lot
	of access to EISA or VLB machines, so this is largely an untested
	theory.  However, we have yet to see any reports of things not
	working on one of these buses and we have several reports of Xfree
	working fine on them.

. What about accelerated boards?

	At this time, there is no support in XFree for accelerated boards
	like the S, ATI Ultra (/A), TIGA, etc.  This support is available
	in commercial products from SGCS and MetroLink (for SVR and SVR).

	An S server is available for BSD and Linux.  Contact
	<hasty@netcom.com> for BSD or <jon@robots.ox.ac.uk> for Linux.

	A beta /A server is available for Linux. Contact <martin@cs.unc.edu>
	or <jon@robots.ox.ac.uk>. Note: these servers are NOT part of XFree.

. Why doesn't XFree support -color VGA modes?

	The reason that this is not supported is the way VGA implements the
	-color modes.  In -color modes, each byte of frame buffer memory
	contains  pixel.  But the -color modes are implemented as bit-
	planes.  Each byte of frame- buffer memory contains  bit from each
	of each of  pixels, and there are four such planes.  The MIT frame-
	buffer code is not designed to deal with this.  If VGA handled
	-color modes by packing  -bit pixels into each byte, the MIT code
	could be modified to support this (or it already may; I'm not sure).
	But for the VGA way of doing things, a complete new frame-buffer
	implementation is required.  Some beta testers are looking into this,
	but nothing is yet available from the project.

. What other hardware or software requirements are there?

	Obviously, a supported SVGA board and OS are required.  To run
	X efficiently, -MB of memory should be considered a minimum.
	The various binary releases take -MB of disk space, depending
	on the OS (e.g. whether or not it supports shared libraries).
	To build from sources, at least MB of free disk space will
	be required, although MB should be considered a comfortable 
	lower bound.

. Where can I get source for XFree?

	Source patches for the current version (., based on XR PL
	from MIT), are available via anonymous FTP from:
		export.lcs.mit.edu (under /contrib/XFree)
		ftp.physics.su.oz.au (under /XFree)
		ftp.win.tue.nl (under /pub/XFree)
	(For the rest of this FAQ, these  location will be called $FTP)

	Refer to the README file under the specified directory for information
	on which files you need to get to build your distribution.

. Where can I get binaries for XFree?

	Binaries are available via anonymous FTP from:
		ftp.physics.su.oz.au		- SVR binaries
			under /XFree/SVR
		ftp.win.tue.nl			- SVR binaries
			under /pub/XFree/SVR
		ferkel.ucsb.edu			- SVR binaries
			under /pub/SVR/XFree
		stasi.bradley.edu		- SVR binaries
			under /pub/XFree/SVR
		blancmange.ma.utexas.edu	- SVR (ISC) binaries
			under /pub/ISC
		ftp.prz.tu-berlin.de            - SVR (ISC) binaries
			under /pub/pc/isc/XFree
		tsx-.mit.edu			- Linux binaries
			under /pub/linux/packages/X
		agate.berkeley.edu		- BSD binaries
			under /pub/BSD/.-ports/XFree
		ftp.cs.uwm.edu			- Mach binaries
			under /i

	Ensure that you are getting XFree . - some of these sites may
	archive older releases as well.  Each binary distribution will
	contain a README file that describes what files you need to take
	from the archive, and which compile-time option selections were
	made when building the distribution.

IV) What general things should I know about running XFree?

. Installation directories

	The top-level installation directory is specified by the ProjectRoot
	(/usr/X, by default) variable in config/site.def. Binaries, include
	files, and libraries are installed in $ProjectRoot/{bin,include,lib}.

	This can be changed when rebuilding from sources, and can be modified
	via symbolic links for those OSs that support them. This directory is
	nonstandard, and was chosen this way to allow XFree to be installed
	alongside a commercial/vendor-supplied X implementation.

. Configuration files

	The XFree server reads a configuration file ("Xconfig") on startup.
	The search path, contents and syntax for this file are documented in
	the server manpage, which should be consulted before asking questions.

. Determining VGA dot clocks and monitor modes

	David E Wexelblat (dwex@mtgzfs.att.com) maintains a database of known
	clock settings for VGA cards and monitor settings.
	The database is installed in /usr/X/lib/X/etc/modeDB.txt, and
	is in the source tree under mit/server/ddx/x/etc. This database is
	also available from him (for the latest copy), and is kept on
	export.lcs.mit.edu in ~/contrib/X.modeDB.Z, which is updated
	occasionally.  Obtain a copy of this database.  It just might have the
	settings you need.  If you create new settings, please send them to
	David for inclusion in the database.

	If this doesn't help you, the VideoModes.doc (by Eric Raymond) file 
	with XFree contains tutorials on how to come up with these timings.
	It may be helpful to start with settings that almost work, and use
	this description to get them right.  When you do, send the information
	to David Wexelblat for inclusion in the database.

	NOTE: The old 'clock.exe' program is not supported any more, and
	      is completely unnecessary.  If you need to determine dot
	      clock values for a new board, remove the 'Clocks' line from
	      your Xconfig file (if present), and start the server.  The
	      server will probe for clocks itself and print them out.
	      You can use these values to put a 'Clocks' line into your
	      Xconfig file, which is not necessary, but will speed up
	      starting the server in the future.

. Rebuilding/reconfiguring the server from the link kit

	If you have installed the server Binary Link Kit, it is possible to
	reconfigure the drivers and font renderers in the server.  This is
	fully explained in the README file that is available with the link kit.

V) What OS-specific things should I know about running XFree?

	First of all, the server must be installed suid-root (mode ).

. SVR
	Why won't my xterm run properly?

	If your kernel is not built with the consem module, you should define
	CONSEM=no in you environment. Otherwise xterm won't run.
	csh users should use 'setenv CONSEM no'

	The Esix console driver patch  is known to cause keymapping
	problems with XFree.  It recommended that this patch not be
	installed.  Alternatively they keymap can be fixed with xmodmap.

. SVR

	Make sure you look at $FTP/README.ISC, if that's what you are running.

. BSD

	Make sure you look at $FTP/README.BSD.

	Also, a separate BSD FAQ is maintained by Richard Murphey
	<Rich@Rice.edu>.  The latest version should be available in the
	file XFree-.-BSD-FAQ at the following ftp sites:

	    agate.berkeley.edu:/pub/BSD/.-ports/XFree-.
	    wuarchive.wustl.edu:/mirrors/bsd/.-ports/XFree-.
	    grasp.univ-lyon.fr:pub/BSD/.-ports/XFree-.

. Linux

	You must be running Linux .pl or greater, and have the . gcc
	jump libraries installed.

	Make sure the binaries X, Xmono, xload and xterm are setuid root.

	If your kernel doesn't have TCP support compiled in, you'll have to
	run the server as "X -pn". The default startup configuration assumes
	that TCP is not available. If it is, change the two files
	/usr/X/bin/startx and /usr/X/lib/X/xdm/Xservers, removing the
	-pn argument to X.

	Make sure /dev/console is either a link to /dev/tty or has the major
	number , minor number . Also note that if /dev/console is not
	owned by the user running X, then xconsole and xterm will not permit
	console output redirection. Xdm will properly change the owner, but
	startx won't.

	When running xdm from rc.local, you will need to provide it with
	a tty, for example "xdm < /dev/console &".

	For more detailed information, please read the file README present
	with the distribution on tsx-.mit.edu.

. Mach

	Make sure you look at $FTP/README.Mach.

VI) What things should I know for building XFree from source?

	This section has been removed from the FAQ, since it is
	fully explained in $FTP/README and the OS-specific READMEs.
	Please look at those files for information on building XFree.

VII) Is there anything special about building clients with XFree?

. BSD compatibility library

	A lot of clients make use of BSD functions like bcopy(), etc.
	The default configuration files are set up to link with libXbsd.a
	which contains emulation for bcopy(), bzero(), bcmp(), ffs(), random(),
	seed(). A better way of providing the 'b' functions is to include
	<X/Xfuncs.h> in source files that call them.  Xfuncs.h provides macro
	definitions for these in terms of the SYSV 'mem' functions.  If you are
	linking with a vendor supplied library which calls some of these
	functions, then you should link with libXbsd.a

. ANSICCOPTIONS

	This is something that was added to allow a developer to get rid of the
	ANSI-ness defined in the default CCOPTIONS without having to rewrite
	the entire CCOPTIONS line.  For example, with stock MIT, you'd see
	something like
		CCOPTIONS="-ansi -O -fwritable-strings"
	and to get rid of the ANSI-ness, the developer would have to put
		CCOPTIONS="-O -fwritable-strings"
	in his Imakefile.  With this change, you would see a default of
		ANSICCOPTIONS="-ansi"
		CCOPTIONS="-O -fwritable-strings"
	and all the developer would have to put in the Imakefile is:
		ANSICCOPTIONS=
	to get rid of the ANSI-ness (many X clients will die a horrible death
	with -ansi).  The effect is even more dramatic in practice, because
	CCOPTIONS is actually quite complex.  The other issue is that one must
	add 'ANSICCOPTIONS=$(ANSICCOPTIONS)' to a PassCDebugFlags definition.

XFree Contact Information

    Ongoing development planning and support is coordinated by the XFree
    Core Team.  At this time the Core Team consists of:

	The original "gang of four":
		David Dawes <dawes@physics.su.oz.au>
		Glenn Lai <glenn@cs.utexas.edu>
		Jim Tsillas <jtsilla@damon.ccs.northeastern.edu>
		David Wexelblat <dwex@mtgzfs.att.com>

	Those supporting non-SYSV operating systems:
		Robert Baron <Robert.Baron@ernst.mach.cs.cmu.edu> [Mach]
		Rich Murphey <Rich@Rice.edu> [BSD]
		Orest Zborowski <obz@kodak.com> [Linux]

    e-mail sent to <xfree@physics.su.oz.au> will reach all of the core team.

	--------------------------------------------------

Thanks to all the people who already sent me corrections or additions,
especially David Wexelblat (one of the major contributors of updates).