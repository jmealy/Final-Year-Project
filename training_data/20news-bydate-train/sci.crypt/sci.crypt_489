> :Thousands?  Tens of thousands?  Do some arithmetic, please...  Skipjack
   > :has ^ possible keys.
   > 
   > We don't yet know if all  bits count.

   That doesn't worry me at all; they're not going to cheat at something
   they can get caught at.  And key size is one of the things that can be
   verified externally.  Feed lots of random key/input pairs into the
   chip, then try flipping random key bits, and see what happens to the
   output.  We already know what *should* happen -- about half the output
   bits should vary, on average, from a -bit key change or input change.

   If they were out to build a weak cryptosystem, it might be the case that
   some of the bits are much less powerful than others, in the sense that
   they only enter into the encryption very late in the game.  By contrast,
   DES was designed to use each key bit as early as possible; the % output
   change rate appears as early as round .  Again, though, I don't think
   NSA is going to cheat that crudely; they're likely to get caught.

Consider a cryptosytem that starts out by XORing bits  and , and
not using either of these bits except through this XOR. This system
makes early use of every bit. but an exhaustive key search would now
only have ^ keys to search. Your test by varying single key bits
wouldn't turn up anything interesting.

   Remember that they've promised to let a committee of outside experts see
   the cryptosystem design.  If you assume something DES-like, a biased
   subkey generation schedule will stick out like a sore thumb.

The algorithm I suggest above would stick out like a sore thumb, but
I'm sure I could design a system with a more subtle key redundancy
which was well-hidden, but would still make an exhaustive key search
take far less than ^ encryptions. I don't believe your claim that
the real keysize can be verified externally.